CREATE TABLE IF NOT EXISTS users (
  id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name          VARCHAR(255)                            NOT NULL,
  email         VARCHAR(512)                            NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS items (
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(255),
    description VARCHAR(3000),
    owner_id    BIGINT                                  NOT NULL,
    available   BOOLEAN,
    request_id  BIGINT,
    CONSTRAINT pk_item PRIMARY KEY (id),
    CONSTRAINT FK_ITEM_ON_OWNER FOREIGN KEY (owner_id) REFERENCES users (id),
    CONSTRAINT UQ_OWNER_ITEM_NAME UNIQUE (owner_id, name)
);

CREATE TABLE IF NOT EXISTS bookings (
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    start_date  TIMESTAMP WITH TIME ZONE                NOT NULL,
    end_date    TIMESTAMP WITH TIME ZONE                NOT NULL,
    item_id     BIGINT                                  NOT NULL,
    booker_id   BIGINT                                  NOT NULL,
    status      VARCHAR(100),
    CONSTRAINT pk_booking PRIMARY KEY (id),
    CONSTRAINT FK_BOOKING_ON_BOOKER FOREIGN KEY (booker_id) REFERENCES users (id),
    CONSTRAINT FK_BOOKING_ON_ITEM FOREIGN KEY (item_id) REFERENCES items (id),
    CONSTRAINT status CHECK (status IN ('WAITING', 'APPROVED', 'REJECTED', 'CANCELED'))
);

CREATE TABLE IF NOT EXISTS comments (
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text        VARCHAR(3000)                           NOT NULL,
    item_id     BIGINT,
    author_id   BIGINT,
    created     TIMESTAMP WITH TIME ZONE                NOT NULL,
    CONSTRAINT pk_comment PRIMARY KEY (id),
    CONSTRAINT FK_COMMENT_ON_AUTHOR FOREIGN KEY (author_id) REFERENCES users (id),
    CONSTRAINT FK_COMMENT_ON_ITEM FOREIGN KEY (item_id) REFERENCES items (id)
);

CREATE TABLE IF NOT EXISTS requests (
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description    VARCHAR(3000)                           NOT NULL,
    requestor_id   BIGINT                                  NOT NULL,
    CONSTRAINT pk_request PRIMARY KEY (id),
    CONSTRAINT FK_ITEM_REQUEST_ON_REQUESTOR FOREIGN KEY (requestor_id) REFERENCES users (id)
);